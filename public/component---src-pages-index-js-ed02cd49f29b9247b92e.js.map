{"version":3,"sources":["webpack://full-stack-kitchen/./src/components/bio.js","webpack://full-stack-kitchen/./src/pages/index.js"],"names":["bioQuery","StaticQuery","query","render","data","site","siteMetadata","author","social","style","display","G","image","avatar","childImageSharp","gatsbyImageData","alt","name","marginBottom","minWidth","borderRadius","imgStyle","href","instagram","location","siteTitle","title","posts","allMarkdownRemark","nodes","filter","post","fields","slug","length","className","map","frontmatter","key","Link","boxShadow","to","tags","date"],"mappings":"4MAyCA,IAAMA,EAAQ,aAmBd,EAxDA,WACE,OACE,gBAAC,EAAAC,YAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IAAD,EACaA,EAAKC,KAAKC,aAA7BC,EADM,EACNA,OAAQC,EADF,EACEA,OAChB,OACE,uBACEC,MAAO,CACLC,QAAQ,SAGV,gBAAC,EAAAC,EAAD,CACEC,MAAOR,EAAKS,OAAOC,gBAAgBC,gBACnCC,IAAKT,EAAOU,KACZR,MAAO,CACLS,aAAc,EACdC,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAEjB,uCACa,8BAASb,EAAOU,MAD7B,mEAGE,qBAAGK,KAAI,yBAA2Bd,EAAOe,WAAzC,6B,oBC2Bd,EAjDkB,SAAC,GAAwB,IAAD,EAArBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,GAAY,UAAArB,EAAKC,KAAKC,oBAAV,eAAwBoB,QAAxB,QACdC,EAAQvB,EAAKwB,kBAAkBC,MAInC,OAAqB,KAHrBF,EAAQA,EAAMG,QAAO,SAAAC,GAAI,MAAyB,YAArBA,EAAKC,OAAOC,SAG/BC,OAEN,gBAAC,IAAD,CAAQV,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,aACX,uBAAKS,UAAU,wBACZR,EAAMS,KAAI,SAAAL,GACT,IAAML,EAAQK,EAAKM,YAAYX,OAASK,EAAKC,OAAOC,KAEpD,OACE,uBAAKE,UAAU,YAAYG,IAAKP,EAAKC,OAAOC,MAC5C,uBAAKE,UAAU,oBACf,gBAAC,EAAAI,KAAD,CAAM9B,MAAO,CAAE+B,UAAU,QAAWC,GAAIV,EAAKC,OAAOC,MAChD,gBAAC,EAAAtB,EAAD,CAAaC,MAAOmB,EAAKM,YAAYzB,MAAME,gBAAgBC,gBAAiBC,IAAKU,MAGzF,uBAAKS,UAAU,uBAAwBJ,EAAKM,YAAYK,KAAK,IAC7D,uBAAKP,UAAU,mBAAoBJ,EAAKM,YAAYM,MACpD,uBAAKR,UAAU,oBACX,gBAAC,EAAAI,KAAD,CAAM9B,MAAO,CAAE+B,UAAU,QAAWC,GAAIV,EAAKC,OAAOC,MAC/CP","file":"component---src-pages-index-js-ed02cd49f29b9247b92e.js","sourcesContent":["import * as React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`\n            }}\n          >\n            <GatsbyImage\n              image={data.avatar.childImageSharp.gatsbyImageData}\n              alt={author.name}\n              style={{\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }} />\n            <p>\n              Written by <strong>{author.name}</strong> who lives and works in Brooklyn, NY building useful things.\n              {` `}\n              <a href={`https://instagram.com/${social.instagram}`}>\n                Follow on instagram\n              </a>\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`query BioQuery {\n  avatar: file(absolutePath: {regex: \"/profile-pic.jpg/\"}) {\n    childImageSharp {\n      gatsbyImageData(width: 50, height: 50, layout: FIXED)\n    }\n  }\n  site {\n    siteMetadata {\n      author {\n        name\n      }\n      social {\n        instagram\n      }\n    }\n  }\n}\n`\n\nexport default Bio\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  let posts = data.allMarkdownRemark.nodes;\n  posts = posts.filter(post => post.fields.slug !== '/about/');\n\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Homepage\" />\n      <div className=\"home-item__container\">\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <div className=\"home-item\" key={post.fields.slug}>\n            <div className=\"home-item__image\">\n            <Link style={{ boxShadow: `none` }} to={post.fields.slug}>\n                <GatsbyImage image={post.frontmatter.image.childImageSharp.gatsbyImageData} alt={title} />\n            </Link>\n        </div>\n        <div className=\"home-item__category\" >{post.frontmatter.tags[0]}</div>                    \n        <div className=\"home-item__date\" >{post.frontmatter.date}</div>\n        <div className=\"home-item__title\">\n            <Link style={{ boxShadow: `none` }} to={post.fields.slug}>\n                {title}\n            </Link>\n        </div>\n            </div>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n        image {\n          childImageSharp {\n            resize(width: 650, height: 650) {\n              src\n            }\n            gatsbyImageData(width: 786, layout: CONSTRAINED)\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}