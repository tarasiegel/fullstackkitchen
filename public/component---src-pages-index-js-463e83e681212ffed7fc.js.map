{"version":3,"file":"component---src-pages-index-js-463e83e681212ffed7fc.js","mappings":"4MAyCA,MAAMA,EAAQ,aAoBd,MAzDA,WACE,OACEC,EAAAA,cAACC,EAAAA,YAAW,CACVC,MAAOH,EACPI,OAAQC,IACN,MAAM,OAAEC,EAAM,OAAEC,GAAWF,EAAKG,KAAKC,aACrC,OACER,EAAAA,cAAA,OACES,MAAO,CACLC,QAAU,SAGZV,EAAAA,cAACW,EAAAA,EAAW,CACVC,MAAOR,EAAKS,OAAOC,gBAAgBC,gBACnCC,IAAKX,EAAOY,KACZR,MAAO,CACLS,aAAc,EACdC,SAAU,GACVC,aAAe,QAEjBC,SAAU,CACRD,aAAe,SAGnBpB,EAAAA,cAAA,SAAG,cACUA,EAAAA,cAAA,cAASK,EAAOY,MAAc,+DAEvC,IACFjB,EAAAA,cAAA,KAAGsB,KAAO,yBAAwBhB,EAAOiB,aAAa,wBAEpD,GAKhB,E,oBCkBA,MAlDkBC,IAAyB,IAADC,EAAA,IAAvB,KAAErB,EAAI,SAAEsB,GAAUF,EACnC,MAAMG,GAAkC,QAAtBF,EAAArB,EAAKG,KAAKC,oBAAY,IAAAiB,OAAA,EAAtBA,EAAwBG,QAAU,QACpD,IAAIC,EAAQzB,EAAK0B,kBAAkBC,MAGnC,OAFAF,EAAQA,EAAMG,QAAOC,GAA6B,YAArBA,EAAKC,OAAOC,OAEpB,IAAjBN,EAAMO,OAENpC,EAAAA,cAACqC,EAAAA,EAAM,CAACX,SAAUA,EAAUE,MAAOD,GACjC3B,EAAAA,cAACsC,EAAAA,EAAG,CAACV,MAAM,cACX5B,EAAAA,cAACuC,EAAG,MACJvC,EAAAA,cAAA,SAAG,8JASPA,EAAAA,cAACqC,EAAAA,EAAM,CAACX,SAAUA,EAAUE,MAAOD,GACjC3B,EAAAA,cAACsC,EAAAA,EAAG,CAACV,MAAM,aACX5B,EAAAA,cAAA,OAAKwC,UAAU,wBACZX,EAAMY,KAAIR,IACT,MAAML,EAAQK,EAAKS,YAAYd,OAASK,EAAKC,OAAOC,KAEpD,OACEnC,EAAAA,cAAA,OAAKwC,UAAU,YAAYG,IAAKV,EAAKC,OAAOC,MAC1CnC,EAAAA,cAAA,OAAKwC,UAAU,oBACbxC,EAAAA,cAAC4C,EAAAA,KAAI,CAACnC,MAAO,CAAEoC,UAAY,QAASC,GAAIb,EAAKC,OAAOC,MAClDnC,EAAAA,cAACW,EAAAA,EAAW,CACVC,MAAOqB,EAAKS,YAAY9B,MAAME,gBAAgBC,gBAC9CC,IAAKY,MAIX5B,EAAAA,cAAA,OAAKwC,UAAU,uBAAuBP,EAAKS,YAAYK,KAAK,IAC5D/C,EAAAA,cAAA,OAAKwC,UAAU,mBAAmBP,EAAKS,YAAYM,MACnDhD,EAAAA,cAAA,OAAKwC,UAAU,oBACbxC,EAAAA,cAAC4C,EAAAA,KAAI,CAACnC,MAAO,CAAEoC,UAAY,QAASC,GAAIb,EAAKC,OAAOC,MACjDP,IAGD,KAIL,C","sources":["webpack://full-stack-kitchen/./src/components/bio.js","webpack://full-stack-kitchen/./src/pages/index.js"],"sourcesContent":["import * as React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`\n            }}\n          >\n            <GatsbyImage\n              image={data.avatar.childImageSharp.gatsbyImageData}\n              alt={author.name}\n              style={{\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`\n              }}\n              imgStyle={{\n                borderRadius: `50%`\n              }}\n            />\n            <p>\n              Written by <strong>{author.name}</strong> who lives and works in Brooklyn, NY building\n              useful things.\n              {` `}\n              <a href={`https://instagram.com/${social.instagram}`}>Follow on instagram</a>\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 50, height: 50, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        social {\n          instagram\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  let posts = data.allMarkdownRemark.nodes;\n  posts = posts.filter(post => post.fields.slug !== '/about/');\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified\n          for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Homepage\" />\n      <div className=\"home-item__container\">\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <div className=\"home-item\" key={post.fields.slug}>\n              <div className=\"home-item__image\">\n                <Link style={{ boxShadow: `none` }} to={post.fields.slug}>\n                  <GatsbyImage\n                    image={post.frontmatter.image.childImageSharp.gatsbyImageData}\n                    alt={title}\n                  />\n                </Link>\n              </div>\n              <div className=\"home-item__category\">{post.frontmatter.tags[0]}</div>\n              <div className=\"home-item__date\">{post.frontmatter.date}</div>\n              <div className=\"home-item__title\">\n                <Link style={{ boxShadow: `none` }} to={post.fields.slug}>\n                  {title}\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          image {\n            childImageSharp {\n              resize(width: 650, height: 650) {\n                src\n              }\n              gatsbyImageData(width: 786, layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["bioQuery","React","StaticQuery","query","render","data","author","social","site","siteMetadata","style","display","GatsbyImage","image","avatar","childImageSharp","gatsbyImageData","alt","name","marginBottom","minWidth","borderRadius","imgStyle","href","instagram","_ref","_data$site$siteMetada","location","siteTitle","title","posts","allMarkdownRemark","nodes","filter","post","fields","slug","length","Layout","Seo","Bio","className","map","frontmatter","key","Link","boxShadow","to","tags","date"],"sourceRoot":""}