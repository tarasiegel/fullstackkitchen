{"version":3,"file":"component---src-pages-using-typescript-tsx-3ff8c685044b22296213.js","mappings":"gLAqCA,UAxBwDA,IAAA,IAAC,KAAEC,EAAI,KAAEC,EAAI,SAAEC,GAAUH,EAAA,OAC/EI,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAM,mBAAmBH,SAAUA,GACzCC,EAAAA,cAACG,EAAAA,EAAG,CAACD,MAAM,qBACXF,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,YAAa,+DAChCA,EAAAA,cAAA,UAAI,eAAgB,wEAGhDA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,cAAe,mBAAiB,IAC7EA,EAAAA,cAAA,UAAI,cAAe,gBAAaA,EAAAA,cAAA,UAAI,aAAc,UAEpDA,EAAAA,cAAA,SAAG,kCAC8BF,EAAK,wBAAsBD,EAAKO,KAAKC,UAAU,KAEhFL,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGM,KAAK,6CAA4C,kCAAkC,KAExFN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://full-stack-kitchen/./src/pages/using-typescript.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\ntype DataProps = {\n  site: {\n    buildTime: string;\n  };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path, location }) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your pages, components\n      etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't\n      support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and run{' '}\n      <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{' '}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n"],"names":["_ref","data","path","location","React","Layout","title","Seo","site","buildTime","href","Link","to"],"sourceRoot":""}